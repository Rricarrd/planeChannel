/*--------------------------------*- C++ -*---------engine:jinja2-------------------------*\

| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2406                                 |

|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      functions;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Skin friction coefficients on the channel walls
    Cf
    {
        type                coded;
        libs                ("libutilityFunctionObjects.so");
        name                Cf;
        timeStart           0;
        writeControl        writeTime;

        codeExecute
        #{
            auto* CfPtr =
                mesh().getObjectPtr<volScalarField>("Cf");

            if (!CfPtr)
            {
                Info<< "Create skin-friction coefficient field" << nl;
                CfPtr = new volScalarField
                (
                    IOobject
                    (
                        "Cf",
                        mesh().time().timeName(),
                        mesh(),
                        IOobject::NO_READ,
                        IOobject::AUTO_WRITE,
                        IOobject::REGISTER
                    ),
                    mesh(),
                    dimless
                );

                regIOobject::store(CfPtr);
            }

            auto& Cf = *CfPtr;

            Info<< "Computing skin-friction coefficient field\n" << endl;

            const auto& tau =
                mesh().lookupObject<volVectorField>("wallShearStress");

            const dimensionedScalar Ubulk(dimVelocity, 1);

            Cf = mag(tau.component(0))/(0.5*sqr(Ubulk));
        #};
    }
